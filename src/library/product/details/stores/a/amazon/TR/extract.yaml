extends: ../../../../sharedAmazon/shared
fields:
  - name: brandText
    xpath: //a[@id="bylineInfo"]/text() | //div[contains(@id,"bylineInfo") and not(//a[@id="bylineInfo"]/text())] | //a[@id="brandteaser"]/img/@alt
    # regExp: '(Marke:\s+(.+)$|Besuchen Sie den (.+)-Store|^(.+)$)'
  - name: manufacturer
    singleValue: false
    xpath: (//tr/th[contains(text(),"Üretici") and not(contains(text(),"Üretici "))])[1]/following-sibling::td
  - name: weightNet
    singleValue: false
    xpath: (//tr/th[contains(text(),"Ürün Boyutları")])[1]/following-sibling::td
    regExp: '[^;]+$'
  - name: mpc
    singleValue: false
    xpath: (//tr/th[contains(text(),"Model Numarası")])[1]/following-sibling::td | (//tr/th[contains(.,"Model Number")])[1]/following-sibling::td
  - name: packSize
    singleValue: false
    xpath: //div[@id="variation_item_package_quantity"]//label[contains(text(),"Ürünün Paket")]/following-sibling::span6
  - name: shippingDimensions
    singleValue: false
    xpath: (//tr/th[contains(text(),"Paket Boyutları")])[1]/following-sibling::td
  - name: shippingWeight
    singleValue: false
    xpath: (//tr/th[contains(text(),"Paket Boyutları")])[1]/following-sibling::td
    regExp: (.*); (.*)
    regExpReplace: $2
  - name: salesRankRaw
    singleValue: false 
    xpath: //div[contains(@id, "detailBulletsWrapper_feature_div")]//a[contains(@href, "bestseller") and contains(text(), "See")]/preceding-sibling::text()[1] | //div[contains(@id, "productDetails_feature_div")]//a[contains(@href, "bestseller")]/ancestor::span[1] | //div[contains(@id, "detailBulletsWrapper_feature_div")]//a[contains(@href, "bestseller") and not(contains(text(), "See"))]/ancestor::li[1]
    regExp: Şu kategoride\s*([0-9,]{1,})[ \t]*in[ \t]*([^\(]+)
    regExpReplace: >-
      #$1 in $2
  - name: salesRank
    singleValue: false
    xpath: //div[contains(@id, "detailBulletsWrapper_feature_div")]//a[contains(@href, "bestseller") and contains(text(), "See")]/preceding-sibling::text()[1] | //div[contains(@id, "productDetails_feature_div")]//a[contains(@href, "bestseller")]/ancestor::span[1] | //div[contains(@id, "detailBulletsWrapper_feature_div")]//a[contains(@href, "bestseller") and not(contains(text(), "See"))]/ancestor::li[1]
    regExp: Şu kategoride \s*([0-9,]{1,})[ \t]*in[ \t]*([^\(]+)
    regExpReplace: $1
  - name: salesRankCategory
    singleValue: false
    xpath: //div[contains(@id, "detailBulletsWrapper_feature_div")]//a[contains(@href, "bestseller") and contains(text(), "See")]/preceding-sibling::text()[1] | //div[contains(@id, "productDetails_feature_div")]//a[contains(@href, "bestseller")]/ancestor::span[1] | //div[contains(@id, "detailBulletsWrapper_feature_div")]//a[contains(@href, "bestseller") and not(contains(text(), "See"))]/ancestor::li[1]
    regExp: Şu kategoride \s*([0-9,]{1,})[ \t]*in[ \t]*([^\(]+)
    regExpReplace: $2
  - name: ingredientsList
    singleValue: false
    xpath: (//div[@id='importantInformation_feature_div']//div[contains(.,'Ingredients')]/p)
  - name: numberOfServingsInPackage
    singleValue: false
    xpath: //div[contains(@id, "package_quantity")]//span[contains(@class, "selection")] | //*[contains(text(), "Öğe Sayısı")]/following-sibling::td[1]
  - name: warranty
    singleValue: false
    xpath: //div[@class='a-column a-span6 a-span-last']//div[contains(.,'Garanti')]/div
  - name: countryOfOrigin
    singleValue: false
    xpath: //div[@id="feature-bullets"]/ul//li[contains(.,"Menşe Ülke")]
    regExp: (.*)(:)(.*)
    regExpReplace: $3
  - name: allergyAdvice
    singleValue: false
    xpath: //div[@id='important-information']//div[contains(.,'malzemeler')]/p
  - name: energyEfficiency
    singleValue: false
    xpath: (//tr/th[contains(text(),"Enerji Verimliliği Sınıfı")])[1]/following-sibling::td
  - name: materials
    singleValue: false
    xpath: (//tr/th[contains(text(),"Malzeme")])[1]/following-sibling::td
  - name: imageZoomFeaturePresent
    singleValue: false
    xpath: //span[@id="canvasCaption" and contains(text(),"Yakınlaştırmak için imleci görselin üzerine getirin")]
    regExp: (.+)
    regExpReplace: Yes
    defaultValue: No
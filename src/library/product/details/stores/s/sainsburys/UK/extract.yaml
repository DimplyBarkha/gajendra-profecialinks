singleRecord: false
regionsSelector: null
recordSelector: null
recordXPath: null
fields:
  - name: image
    singleValue: true
    xpath: //div[@class="pd__wrapper skipto-content__focus"]//img/@src
  - name: alternateImages
    singleValue: true
    xpath: //div[@class="pd__wrapper skipto-content__focus"]/div/img/@src
  - name: imageAlt
    singleValue: true
    xpath: //div[@class="pd__wrapper skipto-content__focus"]/div/img/@alt
  - name: _url
    xpath: //script[@type = "application/ld+json"][contains(text(),"url")]
    regExp: >-
      url":\s*"([^"]+)
    regExpReplace: $1
  - name: category
    singleValue: false
    xpath: //nav//ol//li
  - name: nameExtended
    singleValue: true
    xpath: //h1[@data-test-id="pd-product-title"]
  - name: listPrice
    singleValue: true
    xpath: //div[@class="pd__cost"]/div
  - name: price
    singleValue: true
    xpath: //div[@class="pd__cost"]/div
    defaultValue: Â£
  - name: availabilityText
    xpath: //script[@type = "application/ld+json"][contains(text(),"https://schema.org/InStock")]
    regExp: .+
    regExpReplace: In Stock
    defaultValue: Out Of Stock
  - name: description
    singleValue: true
    xpath: //div[@id="mainPart"][1]/div[1] | //div[@class="productText"][1]
  - name: descriptionBullets
    singleValue: true
    xpath: count(//div[@id="mainPart"][1]/div[1]//div | //div[@class="productText"][1]//p[contains(text()," ")])
  - name: brandText
    singleValue: true
    xpath: //div[@class="pd__label"]
  - name: manufacturer
    singleValue: true
    xpath: normalize-space(//h3[normalize-space(text())="Manufacturer"]/following-sibling::div[1])
  - name: quantity
    singleValue: true
    xpath: //h1[@data-test-id="pd-product-title"]
    regExp: \d+\w\w?$ 
  - name: variantId
    singleValue: true
    xpath: //span[@id="productSKU"]
  - name: sku
    singleValue: true
    xpath: //span[@id="productSKU"]
  - name: legalDisclaimer
    singleValue: true
    xpath: normalize-space(//div[contains(@class,"pd__disclaimer")]//p[position()>1])
  - name: ratingCount
    singleValue: true
    xpath: //span[@data-test-id="review-count"]
    regExp: \d+
  - name: aggregateRating
    singleValue: true
    xpath: //a[@class="star-rating-link"][2]/span/@aria-label
    regExp: >-
      [^\s]+(?= stars)
  - name: ingredientsList
    singleValue: false
    xpath: normalize-space(//ul[contains(@class,"productIngredients")])
  - name: numberOfServingsInPackage
    singleValue: true
    xpath:
  - name: caloriesPerServing
    singleValue: false
    xpath: //table[contains(@class,"nutritionTable")]/tbody/tr[1]/td[1]
  - name: caloriesFromFatPerServing
    singleValue: true
    xpath:
  - name: totalFatPerServing
    singleValue: true
    xpath: //th[normalize-space(text())="Fat"]/following-sibling::td[1]
  - name: saturatedFatPerServing
    singleValue: true
    xpath: //th[normalize-space(text())="Saturates"]/following-sibling::td[1] | //th[normalize-space(text())="of which Saturates"]/following-sibling::td[1]
  - name: saturatedFatPerServingUom
    singleValue: false
    xpath: //th[normalize-space(text())="Saturates"]/following-sibling::td[1] | //th[normalize-space(text())="of which Saturates"]/following-sibling::td[1]
    regExp: >-
      [^\d]+$
  - name: transFatPerServing
    singleValue: true
    xpath:
  - name: dietaryFibrePerServing
    singleValue: false
    xpath: //th[normalize-space(text())="Fibre"]/following-sibling::td[1]
  - name: dietaryFibrePerServingUom
    singleValue: false
    xpath: //th[normalize-space(text())="Fibre"]/following-sibling::td[1]
    regExp: >-
      [^\d]+$
  - name: saltPerServing
    singleValue: false
    xpath: //th[normalize-space(text())="Salt"]/following-sibling::td[1]
  - name: saltPerServingUom
    singleValue: false
    xpath: //th[normalize-space(text())="Salt"]/following-sibling::td[1]
    regExp: >-
      [^\d]+$
  - name: totalFatPerServingUom
    singleValue: false
    xpath: //th[contains(text(),"Fat")]/following-sibling::td[1]
    regExp: >-
      [a-zA-Z]{1,2}$
  - name: totalSugarsPerServing
    singleValue: true
    xpath: normalize-space(//th[normalize-space(text())="Sugars"]/following-sibling::td[1] | //th[normalize-space(text())="of which sugars"]/following-sibling::td[1] | //th[normalize-space(text())="of which Sugars"]/following-sibling::td[1])
  - name: totalSugarsPerServingUom
    singleValue: false
    xpath: //th[contains(text(),"Sugars")]/following-sibling::td[1] | //th[contains(text(),"of which Sugars")]/following-sibling::td[1]
    regExp: >-
      [^\d]+$
  - name: proteinPerServing
    singleValue: true
    xpath: normalize-space(//th[normalize-space(text())="Protein"]/following-sibling::td[1])
  - name: proteinPerServingUom
    singleValue: false
    xpath: //th[contains(text(),"Protein")]/following-sibling::td[1]
    regExp: >-
      [a-zA-Z]{1,2}$
  - name: calciumPerServing
    singleValue: true
    xpath: normalize-space(//th[normalize-space(text())="Calcium"]/following-sibling::td[1])
  - name: calciumPerServingUom
    singleValue: false
    xpath: //th[contains(text(),"Calcium")]/following-sibling::td[1]
    regExp: >-
      [^\d]+$
  - name: dietaryInformation
    singleValue: true
    xpath: normalize-space(//h3[normalize-space(text())="Dietary Information"]/following-sibling::div[1])
  - name: storage
    singleValue: true
    xpath: normalize-space(//h3[normalize-space(text())="Storage"]/following-sibling::div[1])
  - name: packaging
    singleValue: true
    xpath: normalize-space(//h3[normalize-space(text())="Packaging"]/following-sibling::div[1])
  - name: countryOfOrigin
    singleValue: true
    xpath: normalize-space(//h3[normalize-space(text())="Country of Origin"]/following-sibling::div[1])
  - name: alcoholContent
    xpath: //h3[contains(text(),"Alcohol")]/following-sibling::div[1]/p
    regExp: Alcohol\sby\svolume:\s(\d+\.?\d+?%)
    regExpReplace: $1
  - name: totalCarbPerServing
    singleValue: true
    xpath: //th[normalize-space(text()="Carbohydrates")]/following-sibling::td[1]
  - name: totalCarbPerServingUom
    singleValue: true
    xpath: //th[normalize-space(text()="Carbohydrates")]/following-sibling::td[1]
    regExp: >-
      [a-zA-Z]{1,2}$
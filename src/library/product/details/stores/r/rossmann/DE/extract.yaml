# @format

singleRecord: false
regionsSelector: null
recordSelector: null
recordXPath: null
fields:
  - name: image
    xpath: //meta[contains(@property, 'og:image')]/@content
  - name: imageAlt
    xpath: //div[contains(@class, 'rm-productdetail__image-detail')]//div[contains(@class, 'swiper-slide-active')]//img[contains(@class, 'rm-product__image')]/@alt
  - name: category
    xpath: //ol[contains(@class, 'rm-breadcrumb__list')]/li[position()>1 and not(contains(@class, 'active'))]
  - name: nameExtended
    xpath: //ol[contains(@class, 'rm-breadcrumb__list')]/li[contains(@class, 'active')]
  - name: name
    xpath: //ol[contains(@class, 'rm-breadcrumb__list')]/li[contains(@class, 'active')]
  - name: variantInfo
    xpath: //a[contains(@class, 'rm-variations__item--selected')]/div[contains(@class, 'rm-link--grey')]
  - name: price
    xpath: //div[contains(@class, 'rm-price__current')]/@content
  - name: description
    xpath: //article[contains(@itemprop,"description")]//h2[contains(., 'Produktbeschreibung') or contains(., 'Produktdetails')]/following-sibling::div[contains(@class, 'rm-accordion__detail-info')]
  - name: ingredientsList
    xpath: //article[contains(@itemprop,"description")]//h2[contains(., 'Inhaltsstoffe')]/following-sibling::div[contains(@class, 'rm-accordion__detail-info')] | //span[contains(text(),"Zutaten")][contains(@class,"accordion")]/../following-sibling::div[1]
  - name: brandText
    xpath: //div[contains(@class, 'rm-product__brand')]
  - name: manufacturer
    xpath: //h4[contains(., 'Kontaktdaten') or contains(., 'Lebensmittelunternehmer')]/following-sibling::p[1]/text()[1]
  - name: availabilityText
    xpath: //link[contains(@class, 'rm-product__availability')]/@href | //span[@class="rm-icon__text"]//text()[contains(.,'Filiale verfügbar')]
  - name: quantity
    xpath: //div[contains(@class, 'rm-product__unit')]/div[contains(@class, 'rm-product__unit')][position()=last()] | //div[@class="rm-product__prop"]
  - name: gtin
    xpath: //span[contains(@itemprop, 'sku')]/@content
  - name: sku
    xpath: //span[contains(@itemprop, 'sku')]/@content
  - name: variantId
    xpath: //div[contains(@class, 'rm-product__id--dan')]
  - name: directions
    xpath: //article[contains(@itemprop,"description")]//h2[contains(., 'Anwendung')]/following-sibling::div[contains(@class, 'rm-accordion__detail-info')]
  - name: warnings
    xpath: //h4[contains(., 'Warnhinweise')]/following-sibling::*[not(contains(.,'Warnhinweise'))] | //h2[contains(., 'Warnhinweise')]/following-sibling::*[not(contains(.,'Warnhinweise'))]
  - name: servingSize
    xpath: //th[contains(., 'Durchschnittliche Nährwertangaben')]/following-sibling::th[1]
    regExp: pro\s?(\d+)\s?(.+),(.+)
    regExpReplace: $1
  - name: servingSizeUom
    xpath: //th[contains(., 'Durchschnittliche Nährwertangaben')]/following-sibling::th[1]
    regExp: pro\s?(\d+)\s?(.+),(.+)
    regExpReplace: $2
  - name: caloriesPerServing
    xpath: //tr[contains(., 'Energie')]/td[2]
    regExp: (.+)\/(.+)
    regExpReplace: $2
  - name: totalFatPerServing
    xpath: //tr[contains(., 'Fett')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: totalFatPerServingUom
    xpath: //tr[contains(., 'Fett')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: saturatedFatPerServing
    xpath: //tr[contains(., 'gesättigte Fettsäuren')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: saturatedFatPerServingUom
    xpath: //tr[contains(., 'gesättigte Fettsäuren')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: totalCarbPerServing
    xpath: //tr[contains(., 'Kohlenhydrate')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: totalCarbPerServingUom
    xpath: //tr[contains(., 'Kohlenhydrate')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: proteinPerServing
    xpath: //tr[contains(., 'Eiweiß')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: proteinPerServingUom
    xpath: //tr[contains(., 'Eiweiß')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: totalSugarsPerServing
    xpath: //tr[contains(., 'Zucker')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: totalSugarsPerServingUom
    xpath: //tr[contains(., 'Zucker')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: saltPerServing
    xpath: //tr[contains(., 'Salz')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: saltPerServingUom
    xpath: //tr[contains(., 'Salz')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: dietaryFibrePerServing
    xpath: //tr[contains(., 'Ballaststoffe')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: dietaryFibrePerServingUom
    xpath: //tr[contains(., 'Ballaststoffe')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: sodiumPerServing
    xpath: //tr[contains(., 'Natrium')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $1.$2
  - name: sodiumPerServingUom
    xpath: //tr[contains(., 'Natrium')]/td[2]
    regExp: (\d+)?,?(\d+)?\s?(g|mg|ml|%|IU|Mg|Ml|litre|L)?
    regExpReplace: $3
  - name: alternateImages
    xpath: //div[contains(@class, 'rm-productdetail__image-thumbs')]//div[contains(@class, 'swiper-slide') and not(contains(@class, 'active'))]//img/@src
    regExp: (.+)(width=70&height=70)(.+)
    regExpReplace: $1width=600&height=600&canvas=600
  - name: secondaryImageTotal
    xpath: count(//div[contains(@class, 'rm-productdetail__image-thumbs')]//div[contains(@class, 'swiper-slide') and not(contains(@class, 'active'))])
  - name: ratingCount
    xpath: //div[contains(@class, 'bv_numReviews_text')]
    regExp: \d+
  - name: aggregateRating
    xpath: //div[contains(@class, 'bv_avgRating_component_container')]
  - name: storage
    xpath: //article[contains(@itemprop,"description")]//h2[contains(., 'Aufbewahrung und Verwendung')]/following-sibling::div[contains(@class, 'rm-accordion__detail-info')]
  - name: countryOfOrigin
    xpath: //article[contains(@itemprop,"description")]//h4[contains(., 'Ursprungsland')]/following-sibling::p
  - name: descriptionBullets
    xpath: count(//article[contains(@itemprop,"description")]//h2[contains(., 'Produktbeschreibung') or contains(., 'Produktdetails')]/following-sibling::div[contains(@class, 'rm-accordion__detail-info')]//ul/li)
  - name: additionalDescBulletInfo
    xpath: //article[contains(@itemprop,"description")]//h2[contains(., 'Produktbeschreibung') or contains(., 'Produktdetails')]/following-sibling::div[contains(@class, 'rm-accordion__detail-info')]//ul/li
  - name: promotion
    xpath: //span[contains(@class, 'rm-badge--SPAREN')]
  - name: listPrice
    xpath: //span[contains(@class, 'rm-price__strikethrough')]
  - name: firstVariant
    xpath: //div[contains(@class, 'rm-variations__colors')]//a[contains(@class, 'rm-variations__item')][1]/@href
    regExp: (.+)\/p\/(\d+)
    regExpReplace: $2
  - name: variants
    xpath: //div[contains(@class, 'rm-variations__colors')]//a[contains(@class, 'rm-variations__item') and not(contains(@class, 'rm-variations__item--selected'))]/@href
    regExp: (.+)\/p\/(\d+)
    regExpReplace: $2
  - name: vitaminAPerServing
    xpath: //div[@class="rm-accordion__detail-info"]//text()[contains(.,'Vitamin A')]
    regExp: Vitamin\sA\s\(?([0-9.]+)
    regExpReplace: $1
  - name: vitaminAPerServingUom
    xpath: //div[@class="rm-accordion__detail-info"]//text()[contains(.,'Vitamin A')]
    regExp: (IE/kg|IE)
  - name: variantInformation
    xpath: //a[contains(@class,'variations__item--selected')]

singleRecord: false
regionsSelector: null
recordSelector: 'li[id^="size_combo_button_pdp"][onclick],html>body.no-variants'
recordXpath: null
fields:
  - name: image
    description: URL of the main product image
    xpath: ancestor::html//img[@itemprop="image"]/@src
    regExp: "(^[^?]+)"
    # Added custom height nd width values.
    regExpReplace: $1?wid=1920&hei=1080&op_sharpen=1
  - name: inTheBoxUrl
    singleValue: false
  - name: inTheBoxText
    singleValue: false
    description: Must include text to show the accessories/tools which come with the product
    xpath: ancestor::html//span[contains(.,'In the box')]/../..//li
  - name: hasComparisonTable
    defautValue: No
  - name: unInterruptedPDP
    singleValue: false
    xpath: ancestor::html//div[@id="richRelevanceContainer"]//a[contains(@class, "ItemTitle")]
    description: Titles of products in the sections 'you may also like' or 'sponsored products'. Combine results from Max 3 sections
  - name: imageAlt
    description: Alt text of the main product image
  - name: alternateImages
    xpath: ancestor::html//div[@class="s7thumb"]/@style
    description: Other product images (not in manufacturer description)
  - name: metaKeywords
    xpath: ancestor::html//meta[@name="keywords"]/@content
    description: The <meta> keywords content
  - name: category
    xpath: ancestor::html//div[@id="widget_breadcrumb"]/ul/li/a/@title[not(.="Home")]
    description: The categories (e.g. from breadcrumbs)
  - name: nameExtended
    xpath: ancestor::html//h1[@itemprop="name"]
    description:
      The product name, prefixing "${brand} - " if not included in "name"
      and appending " - ${variantType}" if necessary (fixed per feed)
  - name: listPrice
    xpath: (ancestor::html//div[contains(concat(' ',@class,' ')," was_price ")] | //div[@id="estore_product_price_widget"]//div[@class="was_prices_holder"])[1]
    description: The stated undiscounted price for the product
  - name: price
    xpath: ancestor::html//div[@id="PDP_productPrice"]
    description: The offered price for the selected product variant - if a user
      clicks add to basket this is the price they would be charged
  - name: availabilityText
    xpath: //span[contains(@class,'OutofStock')]
    description: Availability as described on page for the selected variant. If
      there is no availability but the product can be added to cart, this field
      should be "In Stock"
    regExp: (.+)
    regExpReplace: Out of Stock
    defaultValue: In Stock
  - name: description
    xpath: ancestor::html//*[@id="estore_product_longdesc"]
    description:
      Product description supplied by website - may be concatenanted from
      multiple places; specifically not the manufacturer description
  - name: descriptionBullets
    description: Number of ul > li tags in the description
    xpath: count(//*[@id="estore_product_longdesc"]//ul/li)
  - name: brandText
    xpath: ancestor::html//*[@itemprop="Brand"]
    description:
      Product brand shown - this may actually NOT be just a brand name,
      e.g. "Visit the Gillette Store"
  - name: manufacturer
    description: Product manufacturer
    xpath: ancestor::html//*[@id="productManufacturerName"]/@value
  - name: quantity
    description: Quantity as described on the page
    xpath: ancestor::html//div[@class="details details_redesign"] | //div[contains(@id, 'estore_product_price_widget')]//*[contains(@class, 'details')]
    regExp: "(^[^|]+)|"
    regExpReplace: $1
  - name: weightNet
    xpath: ancestor::html//p[@id="product_long_description"]/text()[contains(.,"Weight")]
    regExp: '[^\s]+$'
    description: Net weight as described on the page
  - name: weightGross
    description: Gross weight as described on the page
  - name: gtin
    description: GTIN code (includes UPC/EAN)
  - name: sku
    description: The store-specific product identifier
    xpath: //div[contains(@class,"bv-cleanslate")]//div/@data-product-id
  - name: variantId
    xpath: //div[@id="productId"] | //div[@class="productVarient"]/label/img/@src
    regExp: ([^/]+)\?[^?]+$|(^\d+$)
    regExpReplace: $1$2
    description: Identifier for a variant from a store where variants share the same sku
  - name: mpc
    description: The manufacturer model code (unique) of the product
  - name: packSize
    description:
      The number of packs in the product offer (if stated separately on
      the site to quantity)
  - name: legalDisclaimer
    description: Content under "legal disclaimer" header
  - name: directions
    xpath: ancestor::html//*[@id="product_how_to_use"]/following-sibling::*
    description: Content under "directions" header
  - name: warnings
    xpath: ancestor::html//*[@id="product_hazardous"]/following-sibling::*
    description: Content under "warnings" header
  - name: ratingCount
    description: The number of ratings
    xpath: ancestor::html//*[@itemprop="reviewCount"]
    defaultValue: "0"
  - name: aggregateRatingText
    description: The stated aggregate rating
    xpath: ancestor::html//*[@itemprop="ratingValue"]
    defaultValue: "0"
  - name: aggregateRating
    xpath: ancestor::html//*[@itemprop="ratingValue"]
    defaultValue: "0"
    description: The stated aggregate rating normalized to be out of 5
  # - name: shippingInfo
  #   description: Shipping information for the product
  #   xpath: ancestor::html//*[contains(text(),"Delivery options")]/..
  - name: shippingDimensions
    description: Stated shipping dimensions
  - name: shippingWeight
    description: Stated shipping weight
  - name: variantCount
    xpath: count(//div[@id="sizeComboButton_dropdown"]/ul/li[@onclick])
    description: Number of variants listed
  - name: color
    xpath: div[@class="productVarient"]/label/img/@alt
    description: A textual description of the colour
  - name: colorCode
    description: A code description of the color (e.g. RGB hex)
  - name: manufacturerDescription
    description: The extended description of the product supplied by the lister
  - name: manufacturerImages
    description: Images within the third party description
  - name: videos
    xpath: /html/body/@video-links
    regExp: "[^|]+"
    description: URLs of videos on page
  - name: name
    description: The product name
    xpath: ancestor::html//h1[@itemprop="name"]
  - name: inStorePrice
    description: Price in the selected store
  - name: asin
    description: null
  - name: coupon
    description: Text of any coupon offer
  - name: amazonChoice
    description: YES or Blank
  - name: amazonChoiceCategory
    description: Text of link next to Amazon choice graphic
  - name: brandLink
    description: null
  - name: internationalShipping
    description: Text next to bullet point
  - name: salesRank
    description:
      Amazon best selling rank from product details (linked back) - needs
      to be collapsed
  - name: salesRankCategory
    description:
      Amazon best selling rank from product details (linked back) - needs
      to be collapsed
  - name: subscriptionPrice
    description: Subscribe and save price
  - name: subscribeAndSave
    description: YES/NO
  - name: heroQuickPromoHeadline
    description: See image - top section hero area
  - name: heroQuickPromoImageUrl
    description: null
  - name: heroQuickPromoUrl
    description: null
  - name: pasin
    description: Parent asin
  - name: videoLength
    description: null
  - name: ingredientImagePresent
    description: null
  - name: factImagePresent
    description: null
  - name: largeImageCount
    description: null
  - name: variantAsins
    description: null
  - name: primeFlag
    description: null
  - name: lbb
    description: Check Lost by Box Requirements (just for Amazon and a couple of
      other stores) - LBB occurs when a product is bought from someone other
      than Amazon (on Amazon Website) - even though Amazon has the product "in
      Stock"
  - name: lbbPrice
    description: null
  - name: featureBullets
    description: null
  - name: otherSellersName
    description: null
  - name: otherSellersPrice
    description: null
  - name: otherSellersShipping
    description: null
  - name: secondaryImageTotal
    description: null
  - name: news
    description: null
  - name: addonItem
    description: null
  - name: fastTrack
    description: null
  - name: ingredientsList
    # xpath: ancestor::html//*[@id="product_ingredients"][not(following-sibling::ul)]/following-sibling::p/br[following-sibling::br[position()=1]][not(preceding-sibling::br)]/preceding-sibling::span | //*[@id="product_ingredients"][not(following-sibling::ul)]/following-sibling::p/br[following-sibling::br[position()=1]][not(preceding-sibling::br)]/preceding-sibling::text() | //*[@id="product_ingredients"][not(following-sibling::ul)]/following-sibling::p[not(br)] | //*[@id="product_ingredients"]/following-sibling::ul/li
    xpath: ancestor::html//*[@id="product_ingredients"]/following-sibling::ul | //*[@id="product_ingredients"]/following-sibling::p
    html: true
    description: List of Ingredients from site - can be string of data if no
      discernible start/end point
  - name: backupIngredients
    xpath: ancestor::html//*[contains(text(),"Ingredients")]/following-sibling::p
    # xpath: ancestor::html//span[contains(text(),"Ingredients")]/following-sibling::*
    # xpath: ancestor::html//*[@id="estore_product_longdesc"]
    # regExp: >-
      # (?<=Ingredients)(.+)
  - name: servingSize
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"per")]
    regExp: per\s+([^\s]+)
    regExpReplace: $1
    description: The size of serving Nutritional information is based on.
  - name: servingSizeUom
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"per")]
    regExp: ([^\s]+)\)$
    regExpReplace: $1
    description: Unit of measure of serving
  - name: numberOfServingsInPackage
    description: Suggested number of servings of the product.
  - name: caloriesPerServing
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Energy")]
    regExp: "[^,]+$"
    description:
      Nutritional Information for Calories Per Serving content - Usually
      based on per 100g serving
  - name: caloriesFromFatPerServing
    description: Nutritional Information for Calories From Fat content - Usually
      based on per 100g serving
  - name: totalFatPerServing
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Fat")]
    description:
      Nutritional Information for Total Fat content - Usually based on
      per 100g serving
  - name: totalFatPerServingUom
    regExp: " g "
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Fat")]
    description: Unit of Measure Data for Total Fat content
  - name: saturatedFatPerServing
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"saturates")]
    regExp: of which saturates .+
    description:
      Nutritional Information for Saturated Fat content - Usually based
      on per 100g serving
  - name: saturatedFatPerServingUom
    regExp: " g "
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"saturates")]
    description: Unit of Measure Data for Saturated Fat content
  - name: transFatPerServing
    description:
      Nutritional Information for Trans Fat content - Usually based on
      per 100g serving
  - name: transFatPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Trans Fat content
  - name: cholesterolPerServing
    description:
      Nutritional Information for Cholesterol content - Usually based on
      per 100g serving
  - name: cholesterolPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Cholesterol content
  - name: sodiumPerServing
    description:
      Nutritional Information for Sodium content - Usually based on per
      100g serving
  - name: sodiumPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Sodium content
  - name: totalCarbPerServing
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Carbohydrates")]
    description:
      Nutritional Information for Total Carbohydrate content - Usually
      based on per 100g serving
  - name: totalCarbPerServingUom
    regExp: " g "
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Carbohydrates")]
    description: Unit of Measure Data for Total Carbohydrate content
  - name: dietaryFibrePerServing
    description:
      Nutritional Information for Dietary Fibre content - Usually based
      on per 100g serving
  - name: dietaryFibrePerServingUom
    regExp: " g "
    description: Unit of Measure Data for Dietary Fibre content
  - name: totalSugarsPerServing
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"sugars")]
    regExp: of which sugars .+
    description:
      Nutritional Information for Total Sugar content - Usually based on
      per 100g serving
  - name: totalSugarsPerServingUom
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"sugars")]
    regExp: " g "
    description: Unit of Measure Data for Total Sugar content
  - name: proteinPerServing
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Protein")]
    description:
      Nutritional Information for Protein content - Usually based on per
      100g serving
  - name: proteinPerServingUom
    regExp: " g "
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Protein")]
    description: Unit of Measure Data for Protein
  - name: vitaminAPerServing
    description:
      Nutritional Information for Vitamin A content - Usually based on
      per 100g serving
  - name: vitaminAPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Vitamin A
  - name: vitaminCPerServing
    description:
      Nutritional Information for Vitamin C content - Usually based on
      per 100g serving
  - name: vitaminCPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Vitamin C
  - name: calciumPerServing
    description:
      Nutritional Information for Calcium content - Usually based on per
      100g serving
  - name: calciumPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Calcium
  - name: ironPerServing
    description: Nutritional Information for Iron content - Usually based on per
      100g serving
  - name: ironPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Iron
  - name: dietarySymbols
    description: Information related to the dietary symbols of a specific product
  - name: magnesiumPerServing
    description:
      Nutritional Information for Magnesium content - Usually based on
      per 100g serving
  - name: magnesiumPerServingUom
    regExp: " g "
    description: Unit of Measure Data for Magnesium
  - name: saltPerServing
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Protein")]
    description: Nutritional Information for Salt content - Usually based on per
      100g serving
  - name: saltPerServingUom
    regExp: " g "
    xpath: ancestor::html//span[contains(text(),"Nutrition Information")]/following-sibling::text()[contains(.,"Protein")]
    description: Unit of Measure Data for Salt
  - name: dietaryInformation
    description: null
  - name: specifications
    xpath: ancestor::html//p[@id="product_long_description"]/span[contains(text(),"Product Specifications")]/following-sibling::text()
    # xpath: //span[contains(text(),"Product Specifications")]/following-sibling::text()
    description: The physical dimensions of the product including packaging.
  - name: warranty
    xpath: ancestor::html//p[@id="product_long_description"]/text()[contains(.,"guarantee")] | //p[@id="product_long_description"]/text()[contains(.,"waranty")] | //p[@id="product_long_description"]//span[contains(text(),"guarantee")] | //p[@id="product_long_description"]//span[contains(text(),"waranty")]
    description: Guarantee associated with the product
  - name: storage
    description: Suggested storage location for product
    xpath: ancestor::html//span[contains(text(),"Storage")]/following-sibling::text()[1] | ancestor::html//span[contains(text(),"Storage")]/following-sibling::span
  - name: countryOfOrigin
    xpath: ancestor::html//span[contains(text(),"Country of Origin:")]/following-sibling::text()[1] | //h3[@id="product_important_info"]/following-sibling::p//span[contains(.,"Made in")]
    description: The country from which the product originates
  # - name: allergyAdvice
  #   xpath: ancestor::html//text()[contains(.,"Allergy advice")] | //text()[contains(.,"Allergy advice")]/following-sibling::span[not(following-sibling::br[position()=1][not(following-sibling::span)])]
  #   description: Allergy information associated with the product
  - name: recyclingInformation
    description: Recycling information associated with the product
  - name: productOtherInformation
    description: Any other product information
  - name: packaging
    description: Packaging information
  - name: additives
    description: List of additives in the product
  - name: pricePerUnit
    xapth: //div[@class="details details_redesign"]/text() | //div[@id="estore_product_price_widget"]//*[contains(@class,"details")]
    singleValue: false
    regExp: (£\d+.*)per
    regExpReplace: $1
    description: Price of the product split into certain units
  - name: pricePerUnitUom
    xapth: //div[@class="details details_redesign"]/text() | //div[contains(@id, 'estore_product_price_widget')]//*[contains(@class, "details")]
    regExp: (per\s)(\d+ML)
    regExpReplace: $2
    description: The unit of measurement used in price_per_unit
  - name: promotion
    xpath: ancestor::html//ul[@class="pdp-promotion-redesign-container"]/li[not(normalize-space(.)="")]
    description: promotion text on product page
  - name: alcoholContent
    description: Alcohol content information
  - name: newVersion
    description: In product page, information about a new version of the product
      (https://www.amazon.es/DODOT-Sensitive-Pa%C3%B1ales-Talla-240/dp/B01ELA8U0Q/ref=sr_1_4?__mk_es_ES=%C3%85M%C3%85%C5%BD%C3%95%C3%91&dchild=1&keywords=dodot%2B-%2Bpa%C3%B1ales%2Bpara%2Bni&qid=1589984387&sr=8-4&th=1)
  - name: newAsin
    description:
      In product page, information about a new version of the product -
      new asin info
  - name: newDescription
    description:
      In product page, information about a new version of the product -
      new desription info
  - name: variantInformation
    description: colour / scent / flavour / other
    xpath: //li[@id="size_combo_button_pdp_1"]//div[@class="productVarient"]//label//div//span
  - name: firstVariant
    xpath: //input[contains(@id, 'cvosSkuID')]/@value
    description: Unique identifier for a collection of variants. For a subset of
      core feeds (43) we have a column "first_variant" that is populated with a
      common code to link all variants for a product. method 1 (Preferred) = use
      common tag (Could be parent sku) that is same value for all variants of a
      product. method 2 = first_variant method technique, Identify the first
      varient in the sequence and use this rpc to populate "first_variant" for
      all variants of a product, this rpc becomes the common link between other
      variants. method 3 = apply some logic to determine link between variants,
      this will need analysis
  - name: variants
    xpath: ancestor::html//div[@id="sizeComboButton_dropdown"]/ul/li[@onclick]//img/@src
    regExp: (\/(\d+)?.wid)
    regExpReplace: $2
    description: null
  - name: additionalDescBulletInfo
    xpath: ancestor::html//*[@id="estore_product_longdesc"]//ul/li
    description: null
  - name: prop65Warning
    description: null
  - name: ageSuitability
    description: Recommended age displayed on the product page.
      https://www.amazon.com/LEGO-Classic-Medium-Creative-Brick/dp/B00NHQFA1I
    example: 4 - 99 years
  - name: energyEfficiency
    description: Energy rating of a product.
      https://www.amazon.de/Siemens-WM16W541-Waschmaschine-Schnellwaschprogramm-Nachlegefunktion/dp/B015FJFK14
    example: A+, A+++, B
  - name: technicalInformationPdfPresent
    description: If there is for example a manual in pdf format on the website. ['Yes','No']
    example: https://www.amazon.de/Hasbro-Spiele-44220100-Mastermind-Kinderspiel/dp/B0007OHUG6
    defaultValue: No
  - name: termsAndConditions
    description: Terms and conditions information text ['Yes','No']
    xpath: //a[@title="terms & conditions"]
    regExp: >-
      (.+)
    regExpReplace: Yes
    defaultValue: No
  - name: privacyPolicy
    description: Privacy Policy information text ['Yes','No']
    xpath: //a[contains(@title,"privacy")]
    regExp: >-
      (.+)
    regExpReplace: Yes
    defaultValue: No
  - name: customerServiceAvailability
    description: Information related to customer service availability (text), ['Yes','No']
    xpath: //div[@id="openChat"] | //div[@id="chatWindow"]
    regExp: >-
      (.+)
    regExpReplace: Yes
    defaultValue: No
  - name: materials
    description: Materials used to make the product
    example: https://www.jdsports.co.uk/product/blue-adidas-linear-20-reversible-wind-breaker-jacket/15988125/
  - name: Image360Present
    description: If 360 image is present in the carousel ['Yes','No']
    example: https://www.amazon.com/Trinsic-Single-Handle-Magnetic-Champagne-9159-CZ-DST/dp/B0050EN8E6
    defaultValue: No
  - name: imageZoomFeaturePresent
    description: If Zoom feature is available for Main image or images in the
      carousel,['Yes','No']
    example: https://www.zalando.de/adidas-neo-sneaker-low-blackwhite-a4315i002-q11.html
    xpath: //*[contains(@id,"zoomView")]
    regExp: >-
      (.+)
    regExpReplace: Yes
    defaultValue: No

singleRecord: false
regionsSelector: null
recordSelector: null
recordXPath: //div[@class="a-row a-spacing-mini olpOffer"]
fields:
  - name: getInventory
    xpath: ./@getinventory
    description: product_name - Product titles
    defaultValue: 'false'
  - name: name
    xpath: ancestor::html//h1[@role="main"]
    description: product_name - Product title
  - name: aggregateRating
    xpath: ancestor::html//*[contains(@data-a-popover, "average-customer")]//span[contains(@class,"a-icon-alt")]
    regExp: ^([0-9\.]{3,})
    regExpReplace: $1
    description: "product_reviews - Product reviews, usually out of 5, 
      if not append the amount its out of. ex: 4.5/10"
  - name: reviewCount
    xpath: ancestor::html//*[contains(@data-a-popover, "average-customer")]/following-sibling::span/a[contains(@href,"product-reviews")]
    regExp: ^[^a-zA-Z]+
    description: "product_review_count - # of reviews the product has"
  - name: image
    xpath: ancestor::html//img[@alt="Return to product information"]/@src
    regExp: (.+)\.[^\.]*(\.[^\.]+$)
    regExpReplace: $1$2
    description: product_images - First image on the product listing, dont assign
      'src, img' attribute only select the class that contains it and import
      will scrape the image properly
  - name: resellerName
    xpath: //*[contains(@class,"olpSellerName")]//a | //*[contains(@class,"olpSellerName")]/img/@alt
    description: reseller_name - Seller Name, if the website does not have sellers,
      put the website name as seller
  - name: resellerId
    xpath: //*[contains(@class,"olpSellerName")]//a/@href
    regExp: seller=(\w+)
    regExpReplace: $1
    description: reseller_id - Unique seller ID
  - name: resellerLink
    xpath: //*[contains(@class,"olpSellerName")]//a
    type: LINK
    description: reseller_link - Link to the seller page
  - name: resellerReviewCount
    xpath: //i[contains(@class," a-icon-star ")]/following-sibling::text()
    regExp: \(([^\s]+)
    regExpReplace: $1
    description: reseller_reviews - Number of reviews the seller has
  - name: resellerAggregateRating
    xpath: //i[contains(@class," a-icon-star ")]
    regExp: ^([0-9\.]{3,})
    regExpReplace: $1
    description: Aggregate rating of seller (stars)
  - name: resellerFeedbackPercent
    regExp: ([^%]+)
    regExpReplace: $1
    xpath: //i[contains(@class," a-icon-star ")]/following-sibling::a/b
    description: reseller_feedback_% - Seller feedback percentage poisitive or
      negative dont include percent if possible
  - name: fullfillmentBy
    xpath: //*[@data-a-popover='{"name":"fbaPopover","activate":"onclick"}']
    description: fullfillment_by - Typically only seen on marketplaces not websites,
      if the product can be fulfilled by the seller or the marketplace scrape
      this info
  - name: shippingCost
    xpath: //*[contains(@class,"olpShippingPrice") and not(contains(@class,"olpShippingPriceText"))]
    description: shipping_cost - Product shipping cost
  - name: productId
    xpath: ancestor::html//a[@id="olpDetailPageLink"]/@href
    regExp: dp/(\w+)
    regExpReplace: $1
    description: product_id - Unique Page ID for the product listing (NOT AMAZON
      SPECIFIC, ALL SITES SHOULD INCLUDE EXCEPT EBAY)
  - name: price
    xpath: //*[contains(@class,"olpOfferPrice")]
    description: price - Product Price
  - name: productStock
    description: price - Product Price
  - name: brandText
    xpath: ancestor::html//div[@id="olpProductByline"]
    description: brand_user_input - Brand the product is associated with
  - name: country
    regExp: language:\s*"[^_]+_([^"]+)
    regExpReplace: $1
    description: country - Country of the website scraped (US, DE, UK, ES, IT, FR,
      NL,). Could be handled in workbench too.
    xpath: >-
      ancestor::html//script[contains(text(),'pageType: "OfferListing"')][contains(text(),"language")]
  - name: deliveryDate
    xpath: .//div[@class="a-expander-content a-expander-partial-collapse-content"]
    description: delivery_date - Date the product will be delivered, check the site
      before extractor setup, if the site provides this info by putting in a zip
      code, use interaction to get this data

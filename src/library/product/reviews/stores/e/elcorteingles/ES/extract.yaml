singleRecord: false
regionsSelector: null
recordSelector: null
recordXPath: //ol[contains(@class,'bv-content-list-reviews')]/li
fields:
  - name: helpfulCount
    type: NUMBER
    description: Number of people who said the review was helpful
    xpath: //span[contains(.,'SÃ­')]/span
  - name: brandText
    description: Product brand shown - this may actually NOT be just a brand name,
      e.g. "Visit the Gillette Store"
    xpath: ancestor::html//*[@class='product_detail-brand']
  - name: name
    description: The product name
    xpath: ancestor::html//*[contains(@class,"product_detail-title")]
  - name: sku
    description: The store-specific product identifier
    xpath: ancestor::html//div[@id='product-detail-container']/@data-product-id
  - name: reviewDate
    type: DATETIME
    description: Date the review was made
    xpath: //span[contains(@class,'bv-content-datetime-stamp')]
  - name: reviewRating
    type: NUMBER
    description: Rating normalized to be out of 5
    xpath: //span[contains(@class,'bv-rating-stars-container')]/abbr[1]/@title
    regExp: (\d+) de (\d+)
    regExpReplace: $1
  - name: reviewRating2
    type: NUMBER
    description: Rating normalized to be out of 5
    xpath: //span[contains(@class,'bv-rating-stars-container')]/abbr[1]/@title
    regExp: (\d+) de (\d+)
    regExpReplace: $1
  - name: reviewText
    description: The text of the review
    xpath: //div[contains(@class,'bv-content-summary-body-text')]/p
  - name: reviewTitle
    description: The title of the review
    xpath: //h3[contains(@class,'bv-content-title')]
  - name: gtin
    description: GTIN code (includes UPC/EAN)
    xpath: ancestor::html//span[contains(@class,'js-product-gtin-number')]
  - name: productUrl
    description: The url of the product details page
    xpath: ancestor::html//meta[@name='twitter:url']/@content
  - name: verifiedPurchase
    description: Whether this of an item the reviewer purchased. "Yes" if true else ""
    xpath: //span[contains(@class,'bv-badge-label') and contains(.,'verificado')]
    regExp: (.+)
    regExpReplace: 'Yes'
    defaultValue: ''
  - name: reviewedSku
    description: The SKU of the item that was reviewed (may be different from the
      sku the review was shown on). 1 if sku == reviewedSku else 0. Get sku
      value, transform will handle the value.
    xpath: ancestor::html//div[@id='product-detail-container']/@data-product-id
  - name: user
    description: The user name of the reviewer
    xpath: //span[contains(@class,'bv-author')]/*/span

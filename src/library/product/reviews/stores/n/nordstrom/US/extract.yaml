singleRecord: false
regionsSelector: null
recordSelector: null
recordXPath: //div[contains(@class,'extract-reviews')]
fields:
  - name: id
    singleValue: false
    xpath: //@id
  - name: helpfulCount
    type: NUMBER
    description: Number of people who said the review was helpful
    xpath: //@data-positiveVoteCount
  - name: commentCount
    singleValue: true
    type: NUMBER
    description: Number of comments on the review
  - name: brandText
    description: Product brand shown - this may actually NOT be just a brand name,
      e.g. "Visit the Gillette Store"
    xpath: ancestor::html//div[contains(@id,'product-page-product-title-lockup')]//span[@itemprop='name']
  - name: name
    description: The product name
    xpath: ancestor::html//div[contains(@id,'product-page-product-title-lockup')]//h1[@itemprop='name']
  - name: sku
    description: The store-specific product identifier
    xpath: ancestor::html//meta[contains(@property,'og:url')]/@content
    regExp: \/(\d+)
    regExpReplace: $1
  - name: reviewDate
    type: DATETIME
    description: Date the review was made
    xpath: //@data-reviewDate
  - name: reviewRating
    type: NUMBER
    description: Rating normalized to be out of 5
    xpath: //@data-starRating
  - name: reviewText
    description: The text of the review
    xpath: //@data-comment
  - name: reviewTitle
    description: The title of the review
    xpath: //@data-title
  - name: reviewerTags
    description: The tags a reviewer has
  - name: gtin
    description: GTIN code (includes UPC/EAN)
  - name: productUrl
    description: The url of the product details page
    xpath: ancestor::html//meta[contains(@property,'og:url')]/@content
  - name: verifiedPurchase
    type: BOOLEAN
    description: Whether this of an item the reviewer purchased. "Yes" if true else ""
    xpath: //@data-verifiedPurchaser
    defaultValue: false
    regExp: /Yes/
    regExpReplace: true
  - name: manufacturerResponse
    singleValue: true
    description: The response of the manufacturer (if any)
  - name: syndicatedFrom
    singleValue: true
    description: Stated place the review was syndicated from
  - name: reviewUrl
    singleValue: true
    description: A direct link to the review
  - name: reviewedSku
    description: The SKU of the item that was reviewed (may be different from the
      sku the review was shown on). 1 if sku == reviewedSku else 0. Get sku
      value, transform will handle the value.
    xpath: ancestor::html//meta[contains(@property,'og:url')]/@content
    regExp: \/(\d+)
    regExpReplace: $1
  - name: user
    description: The user name of the reviewer
    type: TEXT
    xpath: //@data-user
  - name: aggregateRating
    description: The product rating
    xpath: ancestor::html//span[contains(@itemprop,'ratingValue')]/@content

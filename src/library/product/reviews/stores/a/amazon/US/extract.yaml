singleRecord: false
regionsSelector: null
recordSelector: null
recordXPath: //*[@data-hook="review"]
fields:
  # - name: helpfulCount
  #   singleValue: true
  #   type: NUMBER
  #   description: Number of people who said the review was helpful
  # - name: commentCount
  #   singleValue: true
  #   type: NUMBER
  #   description: Number of comments on the review
  # - name: brandText
  #   singleValue: true
  #   description: Product brand shown - this may actually NOT be just a brand name,
  #     e.g. "Visit the Gillette Store"
  # - name: name
  #   singleValue: true
  #   description: The product name
  # - name: sku
  #   singleValue: true
  #   description: The store-specific product identifier
  # - name: reviewDate
  #   singleValue: true
  #   description: Date the review was made
  # - name: reviewRating
  #   type: NUMBER
  #   singleValue: true
  #   description: Rating normalized to be out of 5
  # - name: reviewText
  #   singleValue: true
  #   description: The text of the review
  # - name: reviewTitle
  #   singleValue: true
  #   description: The title of the review
  # - name: reviewerTags
  #   singleValue: false
  #   description: The tags a reviewer has
  # - name: gtin
  #   singleValue: true
  #   description: GTIN code (includes UPC/EAN)
  # - name: productUrl
  #   singleValue: true
  #   description: The url of the product details page
  # - name: verifiedPurchase
  #   singleValue: true
  #   type: BOOLEAN
  #   description: Whether this of an item the reviewer purchased. "Yes" if true else ""
  # - name: manufacturerResponse
  #   singleValue: true
  #   description: The response of the manufacturer (if any)
  # - name: syndicatedFrom
  #   singleValue: true
  #   description: Stated place the review was syndicated from
  # - name: reviewUrl
  #   singleValue: true
  #   description: A direct link to the review
  # - name: reviewedSku
  #   singleValue: true
  #   description: The SKU of the item that was reviewed (may be different from the
  #     sku the review was shown on). 1 if sku == reviewedSku else 0


#### Example taken From MarketShare
  - name: comments
    singleValue: false
    description: Number of comments on the review
    type: NUMBER
    xpath: .//span[contains(@class, "review-comment-total")]
    regExp: ([0-9]{1,})
    defaultValue: 0
  - name: product_id
    singleValue: false
    xpath: ancestor::html//span[contains(@class, 'item')]/a[1]/@href
    regExp: dp\/([^\/]+)
    regExpReplace: $1
  - name: reviewDate
    singleValue: false
    description: Date the review  was made
    type: DATETIME
    xpath: .//*[contains(@data-hook,"review-date")]
  - name: domain
    singleValue: false
    description: The URL of the page
    type: TEXT
    xpath: ancestor::html//div[@id="added-url"]
  - name: review_content
    singleValue: false
    description: The text of  the review
    type: TEXT
    xpath: .//*[@data-hook="review-body"]
  - name: review_id
    singleValue: false
    description: A direct link to the review
    type: TEXT
    xpath: ./@id
    regExp: (.+)
    regExpReplace: https://www.amazon.com/gp/customer-reviews/$1
  - name: review_title
    singleValue: false
    description: The title of  the review
    type: TEXT
    xpath: .//*[@data-hook="review-title"]
  - name: rating
    singleValue: false
    description: The review  rating
    type: NUMBER
    xpath: .//*[contains(@data-hook,"review-star-rating")]
    regExp: '^[^\s]+'
  - name: source
    singleValue: true
    description: Hardcoded amazon
    defaultValue: amazon
  - name: tld
    singleValue: false
    xpath: ancestor::html//a[@class="nav-logo-link"]/@aria-label
    regExp: '\.(.+)$'
    regExpReplace: $1
    defaultValue: com
  - name: user
    singleValue: false
    description: The user name of the reviewer
    type: TEXT
    xpath: .//span[contains(@class, "a-profile-name")]
